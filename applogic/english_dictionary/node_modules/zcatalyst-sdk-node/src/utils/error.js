'use strict';

class CatalystError extends Error {
	constructor(errorInfo) {
		super(errorInfo.message);
		this.errorInfo = errorInfo;
	}

	/** @return {string} The error code. */
	get code() {
		return this.errorInfo.code;
	}

	/** @return {string} The error message. */
	get message() {
		return this.errorInfo.message;
	}

	/** @return {object} The object representation of the error. */
	toJSON() {
		return {
			code: this.code,
			message: this.message
		};
	}

	/** @return {string} The string representation of the error. */
	toString() {
		return JSON.stringify(this.toJSON());
	}
}
exports.CatalystError = CatalystError;

class PrefixedCatalystError extends CatalystError {
	constructor(codePrefix, code, message) {
		super({
			code: `${codePrefix}/${code}`,
			message
		});
		this.codePrefix = codePrefix;
	}
}
exports.PrefixedCatalystError = PrefixedCatalystError;

class CatalystApiError extends PrefixedCatalystError {
	constructor(code, message) {
		super('api', code, message);
	}
}
exports.CatalystApiError = CatalystApiError;

class CatalystAppError extends PrefixedCatalystError {
	constructor(code, message) {
		super('app', code, message);
	}
}
exports.CatalystAppError = CatalystAppError;

class CatalystAuthError extends PrefixedCatalystError {
	constructor(code, message) {
		super('auth', code, message);
	}
}
exports.CatalystAuthError = CatalystAuthError;

class CatalystCacheError extends PrefixedCatalystError {
	constructor(code, message) {
		super('cache', code, message);
	}
}
exports.CatalystCacheError = CatalystCacheError;

class CatalystCronError extends PrefixedCatalystError {
	constructor(code, message) {
		super('cron', code, message);
	}
}
exports.CatalystCronError = CatalystCronError;

class CatalystDatastoreError extends PrefixedCatalystError {
	constructor(code, message) {
		super('datastore', code, message);
	}
}
exports.CatalystDatastoreError = CatalystDatastoreError;

class CatalystEmailError extends PrefixedCatalystError {
	constructor(code, message) {
		super('email', code, message);
	}
}
exports.CatalystEmailError = CatalystEmailError;

class CatalystFilestoreError extends PrefixedCatalystError {
	constructor(code, message) {
		super('filestore', code, message);
	}
}
exports.CatalystFilestoreError = CatalystFilestoreError;

class CatalystFunctionsError extends PrefixedCatalystError {
	constructor(code, message) {
		super('functions', code, message);
	}
}
exports.CatalystFunctionsError = CatalystFunctionsError;

class CatalystGQLError extends PrefixedCatalystError {
	constructor(code, message) {
		super('gql', code, message);
	}
}
exports.CatalystGQLError = CatalystGQLError;

class CatalystPushNotificationError extends PrefixedCatalystError {
	constructor(code, message) {
		super('push-notification', code, message);
	}
}
exports.CatalystPushNotificationError = CatalystPushNotificationError;

class CatalystQueueError extends PrefixedCatalystError {
	constructor(code, message) {
		super('queue', code, message);
	}
}
exports.CatalystQueueError = CatalystQueueError;

class CatalystSearchError extends PrefixedCatalystError {
	constructor(code, message) {
		super('search', code, message);
	}
}
exports.CatalystSearchError = CatalystSearchError;

class CatalystUserManagementError extends PrefixedCatalystError {
	constructor(code, message) {
		super('user-management', code, message);
	}
}
exports.CatalystUserManagementError = CatalystUserManagementError;

class CatalystZCQLError extends PrefixedCatalystError {
	constructor(code, message) {
		super('zcql', code, message);
	}
}
exports.CatalystZCQLError = CatalystZCQLError;

class CatalystZiaError extends PrefixedCatalystError {
	constructor(code, message) {
		super('zia', code, message);
	}
}
exports.CatalystZiaError = CatalystZiaError;

class CatalystConnectorError extends PrefixedCatalystError {
	constructor(code, message) {
		super('connector', code, message);
	}
}
exports.CatalystConnectorError = CatalystConnectorError;
