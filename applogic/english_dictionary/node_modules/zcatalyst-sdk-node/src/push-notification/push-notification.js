'use strict';

const isValidApp = require('../utils/validator').isValidApp;
const isStringOrNumber = require('../utils/validator').isStringOrNumber;
const CatalystAppInternals = require('../catalyst-app').CatalystAppInternals;
const AuthorizedHttpClient = require('../utils/api-request').AuthorizedHttpClient;
const CatalystUserManagementError = require('../utils/error').CatalystUserManagementError;
const MobileNotification = require('./mobile-notification').MobileNotification;
const WebNotification = require('./web-notification').WebNotification;
const USER = require('../utils/constants').CREDENTIAL_USER;

class PushNotification extends CatalystAppInternals {
	constructor(app) {
		isValidApp(app, true);
		super(app.internal);
		super.switchUser(USER.admin);
		this.requester = new AuthorizedHttpClient(this);
	}

	mobile(id) {
		if (!isStringOrNumber(id)) {
			throw new CatalystUserManagementError(
				'invalid-argument',
				'Value provided for app_id must be a non empty String or Number.'
			);
		}
		return new MobileNotification(id, this);
	}

	web() {
		return new WebNotification(this);
	}
}
exports.PushNotification = PushNotification;
